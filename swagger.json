{
  "openapi": "3.0.1",
  "info": {
    "title": "VirtoCommerce.Catalog",
    "version": "v1"
  },
  "paths": {
    "/api/catalog/products/associations/{productId}": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Returns list of associations for specified product",
        "description": "Returns list of associations for specified product",
        "operationId": "CatalogModuleAssociations_GetAllAssociations",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Owner product id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Owner product id",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductAssociation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductAssociation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductAssociation"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "catalog:read"
            ]
          }
        ]
      }
    },
    "/api/catalog/products/associations": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Updates the specified association",
        "description": "Updates the specified association",
        "operationId": "CatalogModuleAssociations_UpdateAssociations",
        "requestBody": {
          "description": "The association",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductAssociation"
                },
                "description": "The association",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductAssociation"
                },
                "description": "The association",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductAssociation"
                },
                "description": "The association",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "catalog:update"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Deletes specified associations",
        "description": "Updates the specified association",
        "operationId": "CatalogModuleAssociations_Delete",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "associations to delete ids",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "associations to delete ids",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "catalog:delete"
            ]
          }
        ]
      }
    },
    "/api/catalog/products/associations/search": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Returns associations by search criteria",
        "description": "Returns associations by search criteria",
        "operationId": "CatalogModuleAssociations_Search",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAssociationSearchCriteria"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAssociationSearchCriteria"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAssociationSearchCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductAssociationSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductAssociationSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductAssociationSearchResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "catalog:read"
            ]
          }
        ]
      }
    },
    "/api/catalog/catalogs/search": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "operationId": "CatalogModuleCatalogs_SearchCatalogs",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogSearchCriteria"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogSearchCriteria"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogSearchCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogSearchResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/catalogs/{id}": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets Catalog by id.",
        "description": "Gets Catalog by id with full information loaded",
        "operationId": "CatalogModuleCatalogs_GetCatalog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Catalog id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Catalog id.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Deletes catalog by id.",
        "description": "Deletes catalog by id",
        "operationId": "CatalogModuleCatalogs_DeleteCatalog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Catalog id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Catalog id.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "catalog:delete"
            ]
          }
        ]
      }
    },
    "/api/catalog/catalogs/getnew": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets the template for a new catalog.",
        "description": "Gets the template for a new common catalog",
        "operationId": "CatalogModuleCatalogs_GetNewCatalog",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "catalog:create"
            ]
          }
        ]
      }
    },
    "/api/catalog/catalogs/getnewvirtual": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets the template for a new virtual catalog.",
        "operationId": "CatalogModuleCatalogs_GetNewVirtualCatalog",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "catalog:create"
            ]
          }
        ]
      }
    },
    "/api/catalog/catalogs": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Creates the specified catalog.",
        "description": "Creates the specified catalog",
        "operationId": "CatalogModuleCatalogs_CreateCatalog",
        "requestBody": {
          "description": "The catalog to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "catalog:create"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Updates the specified catalog.",
        "description": "Updates the specified catalog.",
        "operationId": "CatalogModuleCatalogs_UpdateCatalog",
        "requestBody": {
          "description": "The catalog.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "catalog:update"
            ]
          }
        ]
      }
    },
    "/api/catalog/categories/{id}": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets category by id.",
        "operationId": "CatalogModuleCategories_GetCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Category id.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/categories": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets categories by ids",
        "operationId": "CatalogModuleCategories_GetCategoriesByIdsAsync",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Categories ids",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Categories ids",
              "nullable": true
            }
          },
          {
            "name": "respGroup",
            "in": "query",
            "description": "Response group.",
            "schema": {
              "type": "string",
              "description": "Response group.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Creates or updates the specified category.",
        "description": "If category.id is null, a new category is created. It's updated otherwise",
        "operationId": "CatalogModuleCategories_CreateOrUpdateCategory",
        "requestBody": {
          "description": "The category.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Deletes the specified categories by id.",
        "operationId": "CatalogModuleCategories_DeleteCategory",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "The categories ids.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The categories ids.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/categories/plenty": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Get categories by plenty ids",
        "operationId": "CatalogModuleCategories_GetCategoriesByPlentyIds",
        "parameters": [
          {
            "name": "respGroup",
            "in": "query",
            "description": "Response group",
            "schema": {
              "type": "string",
              "description": "Response group",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Categories ids",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Categories ids",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Categories ids",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Categories ids",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/{catalogId}/categories/newcategory": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets the template for a new category.",
        "operationId": "CatalogModuleCategories_GetNewCategory",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "The catalog id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The catalog id.",
              "nullable": true
            }
          },
          {
            "name": "parentCategoryId",
            "in": "query",
            "description": "The parent category id. (Optional)",
            "schema": {
              "type": "string",
              "description": "The parent category id. (Optional)",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/search/products": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "operationId": "CatalogModuleIndexedSearch_SearchProducts",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductIndexedSearchCriteria"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductIndexedSearchCriteria"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductIndexedSearchCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductIndexedSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductIndexedSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductIndexedSearchResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/search/categories": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "operationId": "CatalogModuleIndexedSearch_SearchCategories",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryIndexedSearchCriteria"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryIndexedSearchCriteria"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryIndexedSearchCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryIndexedSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryIndexedSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryIndexedSearchResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/listentries": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Searches for the items by complex criteria.",
        "operationId": "CatalogModuleListEntry_ListItemsSearchAsync",
        "requestBody": {
          "description": "The search criteria.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogListEntrySearchCriteria"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogListEntrySearchCriteria"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogListEntrySearchCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListEntrySearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEntrySearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEntrySearchResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/listentrylinks": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Creates links for categories or items to parent categories and catalogs.",
        "operationId": "CatalogModuleListEntry_CreateLinks",
        "requestBody": {
          "description": "The links.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryLink"
                },
                "description": "The links.",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryLink"
                },
                "description": "The links.",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryLink"
                },
                "description": "The links.",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/listentrylinks/bulkcreate": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Bulk create links to categories and items",
        "operationId": "CatalogModuleListEntry_BulkCreateLinks",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkLinkCreationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkLinkCreationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkLinkCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/listentrylinks/delete": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Unlinks the linked categories or items from parent categories and catalogs.",
        "operationId": "CatalogModuleListEntry_DeleteLinks",
        "requestBody": {
          "description": "The links.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryLink"
                },
                "description": "The links.",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryLink"
                },
                "description": "The links.",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryLink"
                },
                "description": "The links.",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/listentries/move": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Move categories or products to another location.",
        "operationId": "CatalogModuleListEntry_Move",
        "requestBody": {
          "description": "Move operation request",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ListEntriesMoveRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListEntriesMoveRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ListEntriesMoveRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/products/{id}": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets product by id.",
        "operationId": "CatalogModuleProducts_GetProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Item id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Item id.",
              "nullable": true
            }
          },
          {
            "name": "respGroup",
            "in": "query",
            "description": "Response group.",
            "schema": {
              "type": "string",
              "description": "Response group.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/products": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets products by ids",
        "operationId": "CatalogModuleProducts_GetProductByIds",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Item ids",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Item ids",
              "nullable": true
            }
          },
          {
            "name": "respGroup",
            "in": "query",
            "description": "Response group.",
            "schema": {
              "type": "string",
              "description": "Response group.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogProduct"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogProduct"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogProduct"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Create/Update the specified product.",
        "operationId": "CatalogModuleProducts_SaveProduct",
        "requestBody": {
          "description": "The product.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogProduct"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogProduct"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogProduct"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Deletes the specified items by id.",
        "operationId": "CatalogModuleProducts_DeleteProduct",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "The items ids.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The items ids.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/products/plenty": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets products by plenty ids",
        "operationId": "CatalogModuleProducts_GetProductByPlentyIds",
        "parameters": [
          {
            "name": "respGroup",
            "in": "query",
            "description": "Response group.",
            "schema": {
              "type": "string",
              "description": "Response group.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Item ids",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Item ids",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Item ids",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Item ids",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogProduct"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogProduct"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogProduct"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/{catalogId}/products/getnew": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets the template for a new product (outside of category).",
        "description": "Use when need to create item belonging to catalog directly.",
        "operationId": "CatalogModuleProducts_GetNewProductByCatalog",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "The catalog id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The catalog id.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/{catalogId}/categories/{categoryId}/products/getnew": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets the template for a new product (inside category).",
        "description": "Use when need to create item belonging to catalog category.",
        "operationId": "CatalogModuleProducts_GetNewProductByCatalogAndCategory",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "The catalog id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The catalog id.",
              "nullable": true
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "The category id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The category id.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/products/{productId}/getnewvariation": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets the template for a new variation.",
        "operationId": "CatalogModuleProducts_GetNewVariation",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The parent product id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The parent product id.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/products/{productId}/clone": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "operationId": "CatalogModuleProducts_CloneProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProduct"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/products/batch": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Create/Update the specified products.",
        "operationId": "CatalogModuleProducts_SaveProducts",
        "requestBody": {
          "description": "The products.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogProduct"
                },
                "description": "The products.",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogProduct"
                },
                "description": "The products.",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogProduct"
                },
                "description": "The products.",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/properties/{propertyId}": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets property metainformation by id.",
        "operationId": "CatalogModuleProperties_GetProperty",
        "parameters": [
          {
            "name": "propertyId",
            "in": "path",
            "description": "The property id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The property id.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/{catalogId}/properties/getnew": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets the template for a new catalog property.",
        "operationId": "CatalogModuleProperties_GetNewCatalogProperty",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "The catalog id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The catalog id.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/categories/{categoryId}/properties/getnew": {
      "get": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Gets the template for a new category property.",
        "operationId": "CatalogModuleProperties_GetNewCategoryProperty",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "The category id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The category id.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/properties": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Creates or updates the specified property.",
        "description": "If property.IsNew == True, a new property is created. It's updated otherwise",
        "operationId": "CatalogModuleProperties_SaveProperty",
        "requestBody": {
          "description": "The property.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Deletes property by id.",
        "operationId": "CatalogModuleProperties_DeleteProperty",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The property id.",
            "schema": {
              "type": "string",
              "description": "The property id.",
              "nullable": true
            }
          },
          {
            "name": "doDeleteValues",
            "in": "query",
            "description": "Flag indicating to remove property values from objects as well",
            "schema": {
              "type": "boolean",
              "description": "Flag indicating to remove property values from objects as well",
              "default": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/dictionaryitems/search": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Search property dictionary items",
        "operationId": "CatalogModulePropertyDictionaryItems_SearchPropertyDictionaryItems",
        "requestBody": {
          "description": "The search criteria",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyDictionaryItemSearchCriteria"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyDictionaryItemSearchCriteria"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyDictionaryItemSearchCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PropertyDictionaryItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PropertyDictionaryItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PropertyDictionaryItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/catalog/dictionaryitems": {
      "post": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Creates or updates the specified property dictionary items",
        "operationId": "CatalogModulePropertyDictionaryItems_SaveChanges",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PropertyDictionaryItem"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PropertyDictionaryItem"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PropertyDictionaryItem"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "catalog:create"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Catalog module"
        ],
        "summary": "Delete property dictionary items by ids",
        "operationId": "CatalogModulePropertyDictionaryItems_DeletePropertyDictionaryItems",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "The identifiers of objects that needed to be deleted",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The identifiers of objects that needed to be deleted",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "catalog:delete"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Entity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SeoInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "semanticUrl": {
            "type": "string",
            "description": "Slug",
            "nullable": true
          },
          "pageTitle": {
            "type": "string",
            "description": "head title tag content",
            "nullable": true
          },
          "metaDescription": {
            "type": "string",
            "description": "<meta name=\"description\" />",
            "nullable": true
          },
          "imageAltDescription": {
            "type": "string",
            "nullable": true
          },
          "metaKeywords": {
            "type": "string",
            "description": "<meta name=\"keywords\" />",
            "nullable": true
          },
          "storeId": {
            "type": "string",
            "description": "Tenant StoreId which SEO defined",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "description": "SEO related object id",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "description": "SEO related object type name",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Active/Inactive"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "shouldSerializeAuditableProperties": {
            "type": "boolean",
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "binaryData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "relativeUrl": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "typeId": {
            "type": "string",
            "description": "Gets or sets the asset type identifier.",
            "nullable": true
          },
          "group": {
            "type": "string",
            "description": "Gets or sets the asset group name.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the asset name.",
            "nullable": true
          },
          "outerId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "description": "Gets or sets the asset language.",
            "nullable": true
          },
          "isInherited": {
            "type": "boolean",
            "description": "System flag used to mark that object was inherited from other",
            "readOnly": true
          },
          "seoObjectType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "seoInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeoInfo"
            },
            "nullable": true
          },
          "shouldSerializeAuditableProperties": {
            "type": "boolean",
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductAssociation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Association type (Accessories, Up-Sales, Cross-Sales, Related etc)",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "itemId": {
            "type": "string",
            "description": "Is a primary key of associating object",
            "nullable": true
          },
          "associatedObjectId": {
            "type": "string",
            "description": "Each link element can have an associated object like Product, Category, etc.\r\nIs a primary key of associated object",
            "nullable": true
          },
          "associatedObjectType": {
            "type": "string",
            "description": "Associated object type : 'product', 'category' etc",
            "nullable": true
          },
          "outerId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "associatedObjectName": {
            "type": "string",
            "description": "Display name for associated object",
            "nullable": true,
            "readOnly": true
          },
          "associatedObjectImg": {
            "type": "string",
            "description": "Associated object image URL",
            "nullable": true,
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "imgSrc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "nullable": true
          }
        }
      },
      "SortDirection": {
        "enum": [
          "Ascending",
          "Descending"
        ],
        "type": "string"
      },
      "SortInfo": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "$ref": "#/components/schemas/SortDirection"
          }
        }
      },
      "ProductAssociationSearchCriteria": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "responseGroup": {
            "type": "string",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "keyword": {
            "type": "string",
            "nullable": true
          },
          "searchPhrase": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "sort": {
            "type": "string",
            "nullable": true
          },
          "sortInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "take": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductAssociationSearchResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAssociation"
            },
            "nullable": true
          }
        }
      },
      "CatalogSearchCriteria": {
        "type": "object",
        "properties": {
          "catalogIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "responseGroup": {
            "type": "string",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "keyword": {
            "type": "string",
            "nullable": true
          },
          "searchPhrase": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "sort": {
            "type": "string",
            "nullable": true
          },
          "sortInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "take": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CatalogLanguage": {
        "type": "object",
        "properties": {
          "catalogId": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CategoryLink": {
        "type": "object",
        "properties": {
          "entryId": {
            "type": "string",
            "description": "Entry identifier which this link belongs to",
            "nullable": true,
            "readOnly": true
          },
          "listEntryId": {
            "type": "string",
            "nullable": true
          },
          "listEntryType": {
            "type": "string",
            "description": "Gets or sets the type of the list entry. E.g. \"product\", \"category\"",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "description": "Product order position in virtual catalog",
            "format": "int32"
          },
          "catalogId": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          }
        }
      },
      "OutlineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Object id",
            "nullable": true
          },
          "seoObjectType": {
            "type": "string",
            "description": "Object type",
            "nullable": true
          },
          "seoInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeoInfo"
            },
            "description": "All SEO records for the object",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of current item",
            "nullable": true
          },
          "hasVirtualParent": {
            "type": "boolean",
            "description": "True when this object is linked to the virtual parent."
          }
        },
        "description": "Represents one outline element: catalog, category or product."
      },
      "Outline": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutlineItem"
            },
            "description": "Outline parts",
            "nullable": true
          }
        },
        "description": "Represents the path from the catalog to one of the child objects (product or category):\r\ncatalog/parent-category1/.../parent-categoryN/object"
      },
      "Category": {
        "type": "object",
        "properties": {
          "catalogId": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "outline": {
            "type": "string",
            "description": "Category outline in physical catalog (all parent categories ids concatenated. E.g. (1/21/344))",
            "nullable": true,
            "readOnly": true
          },
          "path": {
            "type": "string",
            "description": "Category path in physical catalog (all parent categories names concatenated. E.g. (parent1/parent2))",
            "nullable": true
          },
          "isVirtual": {
            "type": "boolean"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "packageType": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "outerId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryLink"
            },
            "nullable": true
          },
          "taxType": {
            "type": "string",
            "nullable": true
          },
          "seoObjectType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "seoInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeoInfo"
            },
            "nullable": true
          },
          "imgSrc": {
            "type": "string",
            "description": "Gets the default image",
            "nullable": true,
            "readOnly": true
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "nullable": true
          },
          "outlines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Outline"
            },
            "nullable": true
          },
          "isInherited": {
            "type": "boolean",
            "description": "System flag used to mark that object was inherited from other",
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PropertyValueType": {
        "enum": [
          "ShortText",
          "LongText",
          "Number",
          "DateTime",
          "Boolean",
          "Integer",
          "GeoPoint"
        ],
        "type": "string"
      },
      "PropertyType": {
        "enum": [
          "Product",
          "Variation",
          "Category",
          "Catalog"
        ],
        "type": "string"
      },
      "PropertyValue": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "propertyId": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "$ref": "#/components/schemas/PropertyValueType"
          },
          "valueId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "object",
            "nullable": true
          },
          "propertyMultivalue": {
            "type": "boolean",
            "readOnly": true
          },
          "outerId": {
            "type": "string",
            "nullable": true
          },
          "isInherited": {
            "type": "boolean"
          },
          "shouldSerializeAuditableProperties": {
            "type": "boolean",
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PropertyAttribute": {
        "type": "object",
        "properties": {
          "propertyId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PropertyDisplayName": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PropertyValidationRule": {
        "type": "object",
        "properties": {
          "isUnique": {
            "type": "boolean",
            "description": "Uniquie value flag constrain"
          },
          "charCountMin": {
            "type": "integer",
            "description": "Down chars count border or null if no defined",
            "format": "int32",
            "nullable": true
          },
          "charCountMax": {
            "type": "integer",
            "description": "Upper chars count border or null if no defined",
            "format": "int32",
            "nullable": true
          },
          "regExp": {
            "type": "string",
            "description": "Custom regular expression",
            "nullable": true
          },
          "propertyId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Represents property validation rules definition"
      },
      "Property": {
        "type": "object",
        "properties": {
          "isReadOnly": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether user can change property value."
          },
          "isManageable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether user can change property metadata or remove this property.",
            "readOnly": true
          },
          "isNew": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is new. A new property should be created on server site instead of trying to update it."
          },
          "catalogId": {
            "type": "string",
            "description": "Gets or sets the catalog id that this product belongs to.",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "description": "Gets or sets the category id that this product belongs to.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "dictionary": {
            "type": "boolean"
          },
          "multivalue": {
            "type": "boolean"
          },
          "multilanguage": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this VirtoCommerce.CatalogModule.Core.Model.Property is hidden."
          },
          "valueType": {
            "$ref": "#/components/schemas/PropertyValueType"
          },
          "type": {
            "$ref": "#/components/schemas/PropertyType"
          },
          "outerId": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValue"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyAttribute"
            },
            "nullable": true
          },
          "displayNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyDisplayName"
            },
            "nullable": true
          },
          "validationRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValidationRule"
            },
            "nullable": true
          },
          "validationRule": {
            "$ref": "#/components/schemas/PropertyValidationRule"
          },
          "isInherited": {
            "type": "boolean"
          },
          "shouldSerializeAuditableProperties": {
            "type": "boolean",
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Catalog": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isVirtual": {
            "type": "boolean"
          },
          "outerId": {
            "type": "string",
            "nullable": true
          },
          "defaultLanguage": {
            "$ref": "#/components/schemas/CatalogLanguage"
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogLanguage"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CatalogSearchResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Catalog"
            },
            "nullable": true
          }
        }
      },
      "NumericRange": {
        "type": "object",
        "properties": {
          "lower": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "upper": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "includeLower": {
            "type": "boolean"
          },
          "includeUpper": {
            "type": "boolean"
          }
        }
      },
      "GeoPoint": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "GeoDistanceFilter": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/GeoPoint"
          },
          "distance": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ProductIndexedSearchCriteria": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "description": "Physical, Digital, etc.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "pricelists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "priceRange": {
            "$ref": "#/components/schemas/NumericRange"
          },
          "classTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the class types.",
            "nullable": true
          },
          "withHidden": {
            "type": "boolean",
            "description": "Specifies if we search for hidden products."
          },
          "startDate": {
            "type": "string",
            "description": "Gets or sets the start date. The date must be in UTC format as that is format indexes are stored in.",
            "format": "date-time"
          },
          "startDateFrom": {
            "type": "string",
            "description": "Gets or sets the start date from filter. Used for filtering new products. The date must be in UTC format as that is format indexes are stored in.",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Gets or sets the end date. The date must be in UTC format as that is format indexes are stored in.",
            "format": "date-time",
            "nullable": true
          },
          "includeAggregations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets a \"white\" list of aggregation keys that identify preconfigured aggregations, which SHOULD be calculated and returned with the search result.",
            "nullable": true
          },
          "excludeAggregations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets a \"black\" list of aggregation keys that identify preconfigured aggregations, which SHOULD NOT be calculated and returned with the search result.",
            "nullable": true
          },
          "geoDistanceFilter": {
            "$ref": "#/components/schemas/GeoDistanceFilter"
          },
          "sortInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortInfo"
            },
            "description": "Override base SortInfo property to support GeoSortInfo sorting types",
            "nullable": true,
            "readOnly": true
          },
          "storeId": {
            "type": "string",
            "nullable": true
          },
          "catalogId": {
            "type": "string",
            "nullable": true
          },
          "outline": {
            "type": "string",
            "description": "CategoryId1/CategoryId2, no catalog should be included in the outline",
            "nullable": true
          },
          "outlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "CategoryId1/CategoryId2, no catalog should be included in the outline",
            "nullable": true
          },
          "terms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Term format: name:value1,value2",
            "nullable": true
          },
          "userGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Assigned groups for current user. Data format: user_groups:value1,value2",
            "nullable": true
          },
          "isFuzzySearch": {
            "type": "boolean",
            "description": "Enable fuzzy search, i.e. allow to search color:white even if color:wihte actually passed to criteria"
          },
          "rawQuery": {
            "type": "string",
            "description": "Gets or sets the search provider specific raw search query; all other search criteria will be ignored",
            "nullable": true
          },
          "includeFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allows to retrieve only a specific set of fields in the result hits",
            "nullable": true
          },
          "keyword": {
            "type": "string",
            "nullable": true
          },
          "responseGroup": {
            "type": "string",
            "nullable": true
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchPhrase": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "sort": {
            "type": "string",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "take": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Asset": {
        "type": "object",
        "properties": {
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "readableSize": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "binaryData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "relativeUrl": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "typeId": {
            "type": "string",
            "description": "Gets or sets the asset type identifier.",
            "nullable": true
          },
          "group": {
            "type": "string",
            "description": "Gets or sets the asset group name.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the asset name.",
            "nullable": true
          },
          "outerId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "description": "Gets or sets the asset language.",
            "nullable": true
          },
          "isInherited": {
            "type": "boolean",
            "description": "System flag used to mark that object was inherited from other",
            "readOnly": true
          },
          "seoObjectType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "seoInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeoInfo"
            },
            "nullable": true
          },
          "shouldSerializeAuditableProperties": {
            "type": "boolean",
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EditorialReview": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          },
          "reviewType": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "isInherited": {
            "type": "boolean"
          },
          "shouldSerializeAuditableProperties": {
            "type": "boolean",
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Variation": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "SKU code",
            "nullable": true
          },
          "manufacturerPartNumber": {
            "type": "string",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number (GTIN). These identifiers include UPC (in North America), EAN (in Europe), JAN (in Japan), and ISBN (for books).",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "catalogId": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "nullable": true
          },
          "outline": {
            "type": "string",
            "description": "Product outline in physical catalog (all parent categories ids concatenated. E.g. (1/21/344))",
            "nullable": true,
            "readOnly": true
          },
          "path": {
            "type": "string",
            "description": "Product path in physical catalog (all parent categories names concatenated. E.g. (parent1/parent2))",
            "nullable": true,
            "readOnly": true
          },
          "titularItemId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mainProductId": {
            "type": "string",
            "nullable": true
          },
          "isBuyable": {
            "type": "boolean",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "trackInventory": {
            "type": "boolean",
            "nullable": true
          },
          "indexingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "maxQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "description": "Can be Physical, Digital or Subscription.",
            "nullable": true
          },
          "packageType": {
            "type": "string",
            "nullable": true
          },
          "weightUnit": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "measureUnit": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "length": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "width": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "enableReview": {
            "type": "boolean",
            "nullable": true
          },
          "maxNumberOfDownload": {
            "type": "integer",
            "description": "re-downloads limit",
            "format": "int32",
            "nullable": true
          },
          "downloadExpiration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "downloadType": {
            "type": "string",
            "description": "DownloadType: {Standard Product, Software, Music}",
            "nullable": true
          },
          "hasUserAgreement": {
            "type": "boolean",
            "nullable": true
          },
          "shippingType": {
            "type": "string",
            "nullable": true
          },
          "taxType": {
            "type": "string",
            "nullable": true
          },
          "vendor": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "description": "Product order position in catalog",
            "format": "int32"
          },
          "outerId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "nullable": true
          },
          "propertyValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValue"
            },
            "nullable": true,
            "deprecated": true
          },
          "imgSrc": {
            "type": "string",
            "description": "Gets the default image for the product.",
            "nullable": true,
            "readOnly": true
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "nullable": true
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryLink"
            },
            "nullable": true
          },
          "variations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variation"
            },
            "nullable": true
          },
          "seoObjectType": {
            "type": "string",
            "description": "Each descendant type should override this property to use other object type for seo records",
            "nullable": true,
            "readOnly": true
          },
          "seoInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeoInfo"
            },
            "nullable": true
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditorialReview"
            },
            "nullable": true
          },
          "associations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAssociation"
            },
            "nullable": true
          },
          "referencedAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAssociation"
            },
            "nullable": true
          },
          "outlines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Outline"
            },
            "nullable": true
          },
          "isInherited": {
            "type": "boolean",
            "description": "System flag used to mark that object was inherited from other",
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CatalogProduct": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "SKU code",
            "nullable": true
          },
          "manufacturerPartNumber": {
            "type": "string",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number (GTIN). These identifiers include UPC (in North America), EAN (in Europe), JAN (in Japan), and ISBN (for books).",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "catalogId": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "nullable": true
          },
          "outline": {
            "type": "string",
            "description": "Product outline in physical catalog (all parent categories ids concatenated. E.g. (1/21/344))",
            "nullable": true,
            "readOnly": true
          },
          "path": {
            "type": "string",
            "description": "Product path in physical catalog (all parent categories names concatenated. E.g. (parent1/parent2))",
            "nullable": true,
            "readOnly": true
          },
          "titularItemId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mainProductId": {
            "type": "string",
            "nullable": true
          },
          "isBuyable": {
            "type": "boolean",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "trackInventory": {
            "type": "boolean",
            "nullable": true
          },
          "indexingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "maxQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "description": "Can be Physical, Digital or Subscription.",
            "nullable": true
          },
          "packageType": {
            "type": "string",
            "nullable": true
          },
          "weightUnit": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "measureUnit": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "length": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "width": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "enableReview": {
            "type": "boolean",
            "nullable": true
          },
          "maxNumberOfDownload": {
            "type": "integer",
            "description": "re-downloads limit",
            "format": "int32",
            "nullable": true
          },
          "downloadExpiration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "downloadType": {
            "type": "string",
            "description": "DownloadType: {Standard Product, Software, Music}",
            "nullable": true
          },
          "hasUserAgreement": {
            "type": "boolean",
            "nullable": true
          },
          "shippingType": {
            "type": "string",
            "nullable": true
          },
          "taxType": {
            "type": "string",
            "nullable": true
          },
          "vendor": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "description": "Product order position in catalog",
            "format": "int32"
          },
          "outerId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "nullable": true
          },
          "propertyValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValue"
            },
            "nullable": true,
            "deprecated": true
          },
          "imgSrc": {
            "type": "string",
            "description": "Gets the default image for the product.",
            "nullable": true,
            "readOnly": true
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "nullable": true
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryLink"
            },
            "nullable": true
          },
          "variations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variation"
            },
            "nullable": true
          },
          "seoObjectType": {
            "type": "string",
            "description": "Each descendant type should override this property to use other object type for seo records",
            "nullable": true,
            "readOnly": true
          },
          "seoInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeoInfo"
            },
            "nullable": true
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditorialReview"
            },
            "nullable": true
          },
          "associations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAssociation"
            },
            "nullable": true
          },
          "referencedAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAssociation"
            },
            "nullable": true
          },
          "outlines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Outline"
            },
            "nullable": true
          },
          "isInherited": {
            "type": "boolean",
            "description": "System flag used to mark that object was inherited from other",
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AggregationLabel": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AggregationItem": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "description": "Gets or sets the aggregation item value",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "description": "Gets or sets the aggregation item count",
            "format": "int32"
          },
          "isApplied": {
            "type": "boolean",
            "description": "Gets or sets the flag for aggregation item is applied"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregationLabel"
            },
            "description": "Gets or sets the collection of the aggregation item labels",
            "nullable": true
          },
          "requestedLowerBound": {
            "type": "string",
            "description": "Gets or sets the request lower bound for range aggregation value",
            "nullable": true
          },
          "requestedUpperBound": {
            "type": "string",
            "description": "Gets or sets the request lower bound for range aggregation value",
            "nullable": true
          }
        }
      },
      "Aggregation": {
        "type": "object",
        "properties": {
          "aggregationType": {
            "type": "string",
            "description": "Gets or sets the value of the aggregation type",
            "nullable": true
          },
          "field": {
            "type": "string",
            "description": "Gets or sets the value of the aggregation field",
            "nullable": true
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregationLabel"
            },
            "description": "Gets or sets the collection of the aggregation labels",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregationItem"
            },
            "description": "Gets or sets the collection of the aggregation items",
            "nullable": true
          }
        }
      },
      "ProductIndexedSearchResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogProduct"
            },
            "nullable": true
          },
          "aggregations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Aggregation"
            },
            "nullable": true
          }
        }
      },
      "CategoryIndexedSearchCriteria": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "storeId": {
            "type": "string",
            "nullable": true
          },
          "catalogId": {
            "type": "string",
            "nullable": true
          },
          "outline": {
            "type": "string",
            "description": "CategoryId1/CategoryId2, no catalog should be included in the outline",
            "nullable": true
          },
          "outlines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "CategoryId1/CategoryId2, no catalog should be included in the outline",
            "nullable": true
          },
          "terms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Term format: name:value1,value2",
            "nullable": true
          },
          "userGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Assigned groups for current user. Data format: user_groups:value1,value2",
            "nullable": true
          },
          "isFuzzySearch": {
            "type": "boolean",
            "description": "Enable fuzzy search, i.e. allow to search color:white even if color:wihte actually passed to criteria"
          },
          "rawQuery": {
            "type": "string",
            "description": "Gets or sets the search provider specific raw search query; all other search criteria will be ignored",
            "nullable": true
          },
          "includeFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allows to retrieve only a specific set of fields in the result hits",
            "nullable": true
          },
          "keyword": {
            "type": "string",
            "nullable": true
          },
          "responseGroup": {
            "type": "string",
            "nullable": true
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchPhrase": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "sort": {
            "type": "string",
            "nullable": true
          },
          "sortInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "take": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CategoryIndexedSearchResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "aggregations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Aggregation"
            },
            "nullable": true
          }
        }
      },
      "CatalogListEntrySearchCriteria": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "vendorId": {
            "type": "string",
            "description": "Search by vendor",
            "nullable": true
          },
          "vendorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "productType": {
            "type": "string",
            "description": "Search product with specified type",
            "nullable": true
          },
          "productTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "withHidden": {
            "type": "boolean"
          },
          "hideDirectLinkedCategories": {
            "type": "boolean"
          },
          "mainProductId": {
            "type": "string",
            "description": "Search within variations of specified main product",
            "nullable": true
          },
          "searchInChildren": {
            "type": "boolean",
            "description": "Search  in all children categories for specified catalog or categories"
          },
          "searchInVariations": {
            "type": "boolean",
            "description": "Also search in variations"
          },
          "onlyBuyable": {
            "type": "boolean",
            "nullable": true
          },
          "onlyWithTrackingInventory": {
            "type": "boolean",
            "nullable": true
          },
          "catalogId": {
            "type": "string",
            "nullable": true
          },
          "catalogIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "nullable": true
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "responseGroup": {
            "type": "string",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "keyword": {
            "type": "string",
            "nullable": true
          },
          "searchPhrase": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "sort": {
            "type": "string",
            "nullable": true
          },
          "sortInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "take": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListEntryBase": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Gets or sets the type. E.g. \"product\", \"category\"",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this entry is active.",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "Gets or sets the image URL.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Gets or sets the entry code.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryLink"
            },
            "description": "Gets or sets the links.",
            "nullable": true
          },
          "outline": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "All entry parents ids",
            "nullable": true
          },
          "path": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "All entry parents names",
            "nullable": true
          },
          "catalogId": {
            "type": "string",
            "description": "Gets or sets the catalog id.",
            "nullable": true
          },
          "seoObjectType": {
            "type": "string",
            "nullable": true
          },
          "seoInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeoInfo"
            },
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Base class for all entries used in catalog categories browsing."
      },
      "ListEntrySearchResult": {
        "type": "object",
        "properties": {
          "listEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListEntryBase"
            },
            "description": "Gets or sets the list entries.",
            "nullable": true,
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListEntryBase"
            },
            "nullable": true
          }
        }
      },
      "BulkLinkCreationRequest": {
        "type": "object",
        "properties": {
          "searchCriteria": {
            "$ref": "#/components/schemas/CatalogListEntrySearchCriteria"
          },
          "categoryId": {
            "type": "string",
            "description": "The target category identifier for the link",
            "nullable": true
          },
          "catalogId": {
            "type": "string",
            "description": "The target catalog identifier for the link",
            "nullable": true
          }
        },
        "description": "Information to search and create links to categories and items"
      },
      "ListEntriesMoveRequest": {
        "type": "object",
        "properties": {
          "catalog": {
            "type": "string",
            "nullable": true
          },
          "catalogId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "listEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListEntryBase"
            },
            "nullable": true
          }
        },
        "description": "Represents  move list entries command"
      },
      "PropertyDictionaryItemSearchCriteria": {
        "type": "object",
        "properties": {
          "propertyIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "catalogIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "responseGroup": {
            "type": "string",
            "nullable": true
          },
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "objectTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "objectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "keyword": {
            "type": "string",
            "nullable": true
          },
          "searchPhrase": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "sort": {
            "type": "string",
            "nullable": true
          },
          "sortInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "take": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Search criteria used for search property dictionary items"
      },
      "PropertyDictionaryItemLocalizedValue": {
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PropertyDictionaryItem": {
        "type": "object",
        "properties": {
          "propertyId": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "localizedValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyDictionaryItemLocalizedValue"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "OAuth2 Resource Owner Password Grant flow",
        "flows": {
          "password": {
            "tokenUrl": "/connect/token",
            "scopes": { }
          }
        }
      }
    }
  }
}